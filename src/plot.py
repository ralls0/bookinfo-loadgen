from datetime import *
from tkinter.tix import Tree
from tokenize import String
from typing import List
import matplotlib.pyplot as plt
import numpy as np

ct = [
    0,
    1100.0,
    1100.0,
    1200.0,
    1200.0,
    1200.0,
    1400.0,
    1400.0,
    1400.0,
    1300.0,
    1500.0,
    1600.0,
    1300.0,
    1700.0,
    1900.0,
    2000.0,
    2000.0,
    1500.0,
    1500.0,
    1500.0,
    1500.0,
    1500.0,
    1500.0,
    1700.0,
    1900.0,
    1900.0,
    1900.0,
    1900.0,
    1900.0,
    1900.0,
    1900.0,
    1500.0,
    1700.0,
    1600.0,
    2000.0,
    2000.0,
]
crps = [
    0,
    48.7,
    49.8,
    47.5,
    50.0,
    53.8,
    44.1,
    38.4,
    32.3,
    33.1,
    37.2,
    39.2,
    49.9,
    55.9,
    49.0,
    48.3,
    54.7,
    55.8,
    57.3,
    56.0,
    51.1,
    49.5,
    49.3,
    50.9,
    54.2,
    55.8,
    54.5,
    39.1,
    38.8,
    55.0,
    57.6,
    55.1,
    53.9,
    49.2,
    47.5,
    51.4,
]
cct = [
    0,
    8100.0,
    9000.0,
    9400.0,
    10000.0,
    10000.0,
    11000.0,
    13000.0,
    17000.0,
    19000.0,
    20000.0,
    20000.0,
    16000.0,
    13000.0,
    12000.0,
    12000.0,
    12000.0,
    11000.0,
    11000.0,
    11000.0,
    12000.0,
    12000.0,
    12000.0,
    12000.0,
    11000.0,
    11000.0,
    11000.0,
    14000.0,
    14000.0,
    14000.0,
    12000.0,
    11000.0,
    11000.0,
    12000.0,
    12000.0,
    12000.0,
]
ccrps = [
    0,
    45.3,
    46.1,
    47.5,
    40.6,
    39.9,
    41.2,
    38.0,
    46.7,
    50.5,
    45.3,
    46.8,
    50.6,
    49.4,
    48.1,
    50.2,
    48.6,
    46.0,
    52.5,
    53.7,
    49.8,
    51.6,
    51.9,
    44.3,
    45.4,
    53.8,
    49.2,
    45.0,
    43.1,
    35.6,
    27.6,
    33.2,
    39.0,
    45.7,
    49.3,
    53.6,
]
metricsTime = [
    "00:00",
    "00:05",
    "00:10",
    "00:15",
    "00:20",
    "00:25",
    "00:30",
    "00:35",
    "00:40",
    "00:45",
    "00:50",
    "00:55",
    "01:00",
    "01:05",
    "01:10",
    "01:15",
    "01:20",
    "01:25",
    "01:30",
    "01:35",
    "01:40",
    "01:45",
    "01:50",
    "01:55",
    "02:00",
    "02:05",
    "02:10",
    "02:15",
    "02:20",
    "02:25",
    "02:30",
    "02:35",
    "02:40",
    "02:45",
    "02:50",
    "02:55",
]
user_count = [
    0,
    5,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
]
zt = [
    0,
    300.0,
    320.0,
    370.0,
    380.0,
    380.0,
    570.0,
    610.0,
    390.0,
    390.0,
    390.0,
    370.0,
    670.0,
    650.0,
    400.0,
    410.0,
    390.0,
    420.0,
    420.0,
    540.0,
    520.0,
    390.0,
    410.0,
    400.0,
    430.0,
    400.0,
    410.0,
    390.0,
    420.0,
    420.0,
    540.0,
    520.0,
    390.0,
    410.0,
    400.0,
    430.0,
]
zrps = [
    0,
    39.0,
    51.5,
    60.8,
    59.7,
    58.7,
    52.3,
    49.0,
    55.9,
    59.5,
    58.5,
    56.9,
    54.0,
    48.3,
    52.9,
    58.3,
    57.1,
    56.4,
    56.2,
    50.9,
    49.3,
    56.2,
    58.2,
    57.6,
    57.5,
    52.3,
    49.0,
    55.9,
    59.5,
    58.5,
    56.9,
    54.0,
    48.3,
    52.9,
    56.9,
    54.0,
]
it = [
    0,
    500.0,
    1100.0,
    1100.0,
    750.0,
    370.0,
    380.0,
    420.0,
    520.0,
    360.0,
    430.0,
    390.0,
    380.0,
    370.0,
    520.0,
    520.0,
    370.0,
    350.0,
    390.0,
    400.0,
    580.0,
    610.0,
    460.0,
    410.0,
    390.0,
    360.0,
    360.0,
    550.0,
    450.0,
    370.0,
    410.0,
    400.0,
    400.0,
    540.0,
    560.0,
    420.0,
]
ipt = [
    0,
    330.0,
    580.0,
    910.0,
    940.0,
    760.0,
    660.0,
    410.0,
    410.0,
    540.0,
    550.0,
    370.0,
    360.0,
    360.0,
    390.0,
    440.0,
    540.0,
    500.0,
    380.0,
    410.0,
    410.0,
    420.0,
    580.0,
    580.0,
    390.0,
    400.0,
    400.0,
    420.0,
    440.0,
    580.0,
    530.0,
    370.0,
    390.0,
    410.0,
    470.0,
    600.0,
]
kt = [
    0,
    330.0,
    550.0,
    580.0,
    390.0,
    420.0,
    450.0,
    480.0,
    550.0,
    570.0,
    420.0,
    390.0,
    500.0,
    470.0,
    450.0,
    680.0,
    660.0,
    360.0,
    430.0,
    470.0,
    550.0,
    750.0,
    640.0,
    420.0,
    440.0,
    510.0,
    480.0,
    450.0,
    630.0,
    610.0,
    440.0,
    570.0,
    570.0,
    660.0,
    780.0,
    820.0,
]
kpt = [
    0,
    530.0,
    500.0,
    450.0,
    540.0,
    510.0,
    700.0,
    700.0,
    660.0,
    500.0,
    490.0,
    510.0,
    680.0,
    730.0,
    630.0,
    510.0,
    480.0,
    480.0,
    890.0,
    1100.0,
    1000.0,
    540.0,
    440.0,
    470.0,
    480.0,
    760.0,
    770.0,
    580.0,
    540.0,
    540.0,
    720.0,
    770.0,
    770.0,
    610.0,
    530.0,
    530.0,
]


def plotAny(title: String, xLabel: String, yLabel: String, xpoints: List, xpointlabels: List, yax: List, ylab: List):
    plot = plt.subplot2grid((1, 1), (0, 0))

    plot.set_title(title)
    plot.set_xlabel(xLabel)
    plot.set_ylabel(yLabel)

    for n, y in enumerate(yax):
        plot.plot(xpoints, y, label=ylab[n])
        plot.set_xticks(xpointlabels)
        plot.set_xticklabels(xpointlabels, rotation=45, fontsize="small")

    plot.grid()
    plot.legend(loc='upper left')

    plt.show()

if __name__ == "__main__":

    xpoints = np.array(metricsTime)
    metricsTimeLabel = metricsTime[0:len(metricsTime):12]
    xpointlabels = np.array(metricsTimeLabel)
    fP95 = np.array(zt)
    sP95 = np.array(it)
    tP95 = np.array(ipt)

    nusers = np.array(user_count)

    plotAny("Number of Users", "Time", "Users",
            xpoints, xpointlabels, [nusers], ["users"])

    # test 1
    plotAny("Response Time (ms)", "Time", "ms", xpoints, xpointlabels, [fP95, sP95, tP95], ["demo app",
                                                                                            "demo app with OPSM", "demo app with OPSM and policies"])

    sP95 = np.array(kt)
    tP95 = np.array(kpt)

    plotAny("Response Time (ms)", "Time", "ms", xpoints, xpointlabels, [fP95, sP95, tP95], ["demo app",
                                                                                            "demo app with Kuma", "demo app with Kuma and policies"])

    sP95 = np.array(ipt)
    tP95 = np.array(kpt)

    plotAny("Response Time (ms)", "Time", "ms", xpoints, xpointlabels, [fP95, sP95, tP95], ["demo app",
                                                                                            "demo app with OPSM and policies", "demo app with Kuma and policies"])

    sP95 = np.array(ct)
    tP95 = np.array(cct)

    plotAny("Response Time (ms)", "Time", "ms", xpoints, xpointlabels, [fP95, sP95, tP95], ["20 Users",
                                                                                            "100 Users", "500 Users"])

    fRPS = np.array(zrps)
    sRPS = np.array(crps)
    tRPS = np.array(ccrps)

    plotAny("Total Request per Second", "Time", "rps", xpoints, xpointlabels, [
            fRPS, sRPS, tRPS], ["20 Users", "100 Users", "500 Users"])
